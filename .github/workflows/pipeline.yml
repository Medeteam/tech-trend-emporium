name: SonarCloud
on:
  push:
    branches:
      - main
      - Feature/CI-pipeline
permissions:
  contents: read
  id-token: write
jobs:
  build:
    name: Pipeline CI
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
      - name: Restore dependencies
        run: dotnet restore ./emporium/emporium.sln
      - name: Build
        run: dotnet build ./emporium/emporium.sln --configuration Release --no-restore
      - name: Test
        run: dotnet test ./emporium/emporium.sln --configuration Release --no-build --no-restore --collect:"XPlat Code Coverage"
      - name: Publish
        run: dotnet publish ./emporium/emporium.sln --configuration Release --no-build
      
      # - name: Cache SonarCloud packages
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.sonar/cache
      #     key: ${{ runner.os }}-sonar
      #     restore-keys: ${{ runner.os }}-sonar
      # - name: Cache SonarCloud scanner
      #   id: cache-sonar-scanner
      #   uses: actions/cache@v3
      #   with:
      #     path: .sonar/scanner
      #     key: ${{ runner.os }}-sonar-scanner
      #     restore-keys: ${{ runner.os }}-sonar-scanner
      # - name: Install SonarCloud scanner
      #   if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      #   run: |
      #     mkdir -p .sonar/scanner
      #     dotnet tool update dotnet-sonarscanner --tool-path .sonar/scanner
      # - name: Build and analyze
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   run: |
      #     .sonar/scanner/dotnet-sonarscanner begin /k:"Medeteam_tech-trend-emporium" /o:"medeteam-1" /d:sonar.token="${{ secrets.SONAR_TOKEN }}"  /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
      #     dotnet build ./emporium/emporium.sln
      #     .sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      # - name: login to docker hub
      #   uses: docker/login-action@v3
      #   with: 
      #     username: ${{secrets.DOCKER_USERNAME }}
      #     password: ${{secrets.DOCKER_PASSWORD }}
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      # - name: Get short SHA
      #   id: vars
      #   run: echo "SHORT_SHA=${GITHUB_SHA::8}" >> $GITHUB_ENV
      # - name: Build and push
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{secrets.DOCKER_USERNAME }}/tech-trend-emporium:${{ env.SHORT_SHA }}
      # - name: Post status comment
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       const github = require('@actions/github');
      #       const commitContext = github.context;
      #       const status = commitContext.payload.workflow_run.conclusion;
      #       const sha = commitContext.sha;
      #       const ref = commitContext.ref;
      #       const repo = commitContext.repo.repo;
      #       const owner = commitContext.repo.owner;
      #       const comment = `Pipeline Status: ${status}\nCommit: ${sha}\nBranch: ${ref}\nRepository: ${owner}/${repo}`;
      #       await github.rest.issues.createComment({
      #         owner,
      #         repo,
      #         issue_number: commitContext.issue.number,
      #         body: comment
      #       });
      - name: Generate report
        run: |
          echo "Pipeline Status: ${{ job.status }}" > report.txt
          echo "Commit: ${{ github.sha }}" >> report.txt
          echo "Branch: ${{ github.ref }}" >> report.txt
          echo "Repository: ${{ github.repository }}" >> report.txt

      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: pipeline-report
          path: report.txt
        
